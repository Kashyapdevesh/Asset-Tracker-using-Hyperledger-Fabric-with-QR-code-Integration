#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#curl -sSL http://bit.ly/2ysbOFE | bash -s 1.3.0 1.3.0 0.4.13
version: '2'

volumes:
 blockpath:

networks:
  block:
services:

  ca.mfg1.block.com:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.mfg1.block.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.mfg1.block.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/f9e85ec5383e71e8651a5699a9f562b6a05410efc17c46c6abd70970db2e788b_sk
    ports:
      - "5054:7054"
    command: sh -c 'fabric-ca-server start -b mfg1admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/mfg1.block.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.mfg1.block.com
    networks:
      - block
  ca.mfg2.block.com:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.mfg2.block.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.mfg2.block.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/37d950c218d27d8508c3a09921594a56c7fa7f809f18b9757383e28b7d553103_sk
    ports:
      - "6054:7054"
    command: sh -c 'fabric-ca-server start -b mfg2admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/mfg2.block.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.mfg2.block.com
    networks:
      - block
  ca.shp1.block.com:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.shp1.block.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.shp1.block.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/e56e12ad776bbf4cc8181530e3a5138b07c6f1d7f0e272772e53e31636dc07c2_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b shp1admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/shp1.block.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.shp1.block.com
    networks:
      - block
  ca.shp2.block.com:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.shp2.block.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.shp2.block.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/30d51127518cca614b9e22495c5d9e75b047d7e81fd9612f37d72876875e5747_sk
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start -b shp2admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/shp2.block.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.shp2.block.com
    networks:
      - block
  ca.rtl1.block.com:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.rtl1.block.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.rtl1.block.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/0f77c954830a553daeb97c89516887783d701803bd4471e461f88849981260dc_sk
    ports:
    
      - "9054:7054"
    command: sh -c 'fabric-ca-server start -b rtl1admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/rtl1.block.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.rtl1.block.com
    networks:
      - block
      
  orderer.block.com:
    container_name: orderer.block.com
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - ORDERER_GENERAL_LOGLEVEL=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/commongenesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./config/:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/block.com/orderers/orderer.block.com/:/etc/hyperledger/msp/orderer
        - ./crypto-config/peerOrganizations/mfg1.block.com/peers/peer0.mfg1.block.com/:/etc/hyperledger/msp/peerMfg1
    networks:
      - block

  peer0.mfg1.block.com:
    container_name: peer0.mfg1.block.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.mfg1.block.com
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Mfg1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.mfg1.block.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_block
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 5051:7051
      - 5053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/mfg1.block.com/peers/peer0.mfg1.block.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/mfg1.block.com/users:/etc/hyperledger/msp/users
        - ./config/:/etc/hyperledger/configtx
        # - ./chaincode/:/opt/gopath/src/github.com/
    depends_on:
      - orderer.block.com
      - couchdb0
    networks:
      - block
  peer0.mfg2.block.com:
    container_name: peer0.mfg2.block.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.mfg2.block.com
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Mfg2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.mfg2.block.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_block
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 6051:7051
      - 6053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/mfg2.block.com/peers/peer0.mfg2.block.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/mfg2.block.com/users:/etc/hyperledger/msp/users
        - ./config/:/etc/hyperledger/configtx
        # - ./chaincode/:/opt/gopath/src/github.com/
    depends_on:
      - orderer.block.com
      - couchdb1
    networks:
      - block
  peer0.shp1.block.com:
    container_name: peer0.shp1.block.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.shp1.block.com
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Shp1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.shp1.block.com:7051
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_block
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/shp1.block.com/peers/peer0.shp1.block.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/shp1.block.com/users:/etc/hyperledger/msp/users
        - ./config/:/etc/hyperledger/configtx
        # - ./chaincode/:/opt/gopath/src/github.com/
    depends_on:
      - orderer.block.com
      - couchdb2
    networks:
      - block
  peer0.shp2.block.com:
    container_name: peer0.shp2.block.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.shp2.block.com
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Shp2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.shp2.block.com:7051
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_block
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 8051:7051
      - 8053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/shp2.block.com/peers/peer0.shp2.block.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/shp2.block.com/users:/etc/hyperledger/msp/users
        - ./config/:/etc/hyperledger/configtx
        # - ./chaincode/:/opt/gopath/src/github.com/
    depends_on:
      - orderer.block.com
      - couchdb3
    networks:
      - block
  peer0.rtl1.block.com:
    container_name: peer0.rtl1.block.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.rtl1.block.com
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Rtl1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.rtl1.block.com:7051
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_block
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb4:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 9051:7051
      - 9053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/rtl1.block.com/peers/peer0.rtl1.block.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/rtl1.block.com/users:/etc/hyperledger/msp/users
        - ./config/:/etc/hyperledger/configtx
        # - ./chaincode/:/opt/gopath/src/github.com/
    depends_on:
      - orderer.block.com
      - couchdb4
    networks:
      - block
  
  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb:$THIRDPARTYIMAGE_TAG
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - block
  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb:$THIRDPARTYIMAGE_TAG
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 6984:5984
    networks:
      - block
  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb:$THIRDPARTYIMAGE_TAG
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 7984:5984
    networks:
    - block
  couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb:$THIRDPARTYIMAGE_TAG
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 8984:5984
    networks:
      - block
  couchdb4:
    container_name: couchdb4
    image: hyperledger/fabric-couchdb:$THIRDPARTYIMAGE_TAG
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 9984:5984
    networks:
      - block
  
  cli:
    container_name: cli
    image: hyperledger/fabric-tools:$IMAGE_TAG
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.mfg1.block.com:7051
      - CORE_PEER_LOCALMSPID=Mfg1MSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/mfg1.block.com/users/Admin@mfg1.block.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./config/:/etc/hyperledger/configtx
        - ./chaincode/:/opt/gopath/src/github.com/
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
    networks:
        - block
    depends_on:
      - orderer.block.com
      - peer0.mfg1.block.com
      - couchdb0
      - peer0.shp1.block.com
      - couchdb1
      - peer0.rtl1.block.com
      - couchdb2
